# SPDX-License-Identifier: GPL-2.0-only OR GPL-3.0-only OR LicenseRef-KDE-Accepted-GPL
# SPDX-FileCopyrightText: 2014-2021 Jonathan Riddell <jr@jriddell.org>
# SPDX-FileCopyrightText: 2015 Harald Sitter <sitter@kde.org>
# SPDX-FileCopyrightText: 2018-2020 Bhushan Shah <bhush94@gmail.com>

# Quick script to update version numbers in Plasma 5 modules
# does a clone, replaces PROJECT_VERSION in CMakeLists.txt and pushes
# Also updates Appstream metadata files with new version and date

set -xe

pwd
ls

. ./VERSIONS.inc

# echo for updating version in master after branch override versions here
#VERSION=5.22.80

WORKSPACE=`cat git-repositories-for-release`
echo "updating versions for $WORKSPACE"
rm -rf tmp-version-update
mkdir tmp-version-update
cd tmp-version-update
for project in $WORKSPACE; do
  GITPREFIX="invent:plasma/"
  projectrepo=$project
  project=`basename $project`
  if [ $project != "breeze-grub" ]; then
    echo ${project};
    git clone --depth 1 --no-single-branch ${GITPREFIX}${projectrepo} ${project};
    cd ${project};
    pwd;
    git checkout ${BRANCH}
    sed -i "s,PROJECT_VERSION \".*\",PROJECT_VERSION \"${VERSION}\"," CMakeLists.txt;
    # update appstream files release version unless we are doing a beta
    if [ ! $ORIGIN == 'trunk' ]; then
      for metainfofile in `find . -name \*appdata.xml -o -name \*metainfo.xml`; do
          ${APPSTREAM_UPDATER} ${metainfofile} --version "${VERSION}" --datestring "${RELEASEDATE}" --releases-to-show 4
      done
    fi
    git --no-pager diff;
    git commit -a -m "Update version number for ${VERSION}
GIT_SILENT" || true;
    git push;
    # push to master
    if [ ! $ORIGIN == 'trunk' ] && [ ! $ORIGIN == 'lts' ]; then
      git checkout master
      for metainfofile in `find . -name \*appdata.xml -o -name \*metainfo.xml`; do
          ${APPSTREAM_UPDATER} ${metainfofile} --version "${VERSION}" --datestring "${RELEASEDATE}" --releases-to-show 4
      done
      git commit -a -m "Update version number for ${VERSION}
GIT_SILENT" || true;
      git push;
    fi
    cd ..;
  fi
done
