#!/usr/bin/env ruby
# SPDX-License-Identifier: GPL-2.0-only OR GPL-3.0-only OR LicenseRef-KDE-Accepted-GPL
# SPDX-FileCopyrightText: 2023 Jonathan Esk-Riddell <jr@jriddell.org>

# After a release is published we sometimes get requests for another update, this script
# will make the tar, give you a diff, if confirmed as ok then it's upload, edit kde.org and give you an
# e-mail template, just give it the point-version number to use e.g. 5.27.4.x

require 'optparse'
require 'tty/prompt'
require_relative 'lib/plasma_version'

plasma_versions = PlasmaVersion.new

options = {}
OptionParser.new do |parser|
  parser.banner = "Usage: plasma-update-1-tar-post-release -u 1 REPO"

  parser.on('-u', '--update-version UPDATE_VERSION', 'Point Number for Update Version e.g. 1') { |u| options[:update_version] = u }
  parser.on('-s', '--scratch', 'Use scratch server for uploading to for tests') { |s| options[:scratch] = s }
end.parse!

if not options.include?(:update_version) then
  puts "required -u UPDATE_VERSION"
  exit 1
end

if ARGV.empty?
  warn 'You need a project REPO'
  exit 1
end

scratch = options.include?(:scratch)
server = options.include?(:scratch) ? "#{plasma_versions.scratch_server}/" : "#{plasma_versions.uploadserver}:"
version = plasma_versions.version + "." + options[:update_version]
repo = ARGV[0]

begin
  Dir.mkdir(plasma_versions.version)
rescue Errno::EEXIST => e
  puts "Using existing directory"
rescue => e
  puts "Error creating directory #{e}"
  exit
end

Dir.chdir(plasma_versions.version) do
  system("../../tarme.rb", "--origin", plasma_versions.origin, "--version", version, repo)
end

puts("== writing test output")
Dir.chdir("tmp-tests") do
  system("scp #{server}#{plasma_versions.ftpstable}/plasma/#{plasma_versions.version}/#{repo}-#{plasma_versions.version}.tar.xz old.tar.xz")
  puts("pkgdiff old.tar.xz ../#{plasma_versions.version}/#{repo}-#{version}.tar.xz")
  system("pkgdiff old.tar.xz ../#{plasma_versions.version}/#{repo}-#{version}.tar.xz")
  puts("scp pkgdiff_reports/old/X_to_#{version}/changes_report.html #{plasma_versions.scratch_server}/#{repo}-#{version}-changes_report.html")
  system("scp pkgdiff_reports/old/X_to_#{version}/changes_report.html #{plasma_versions.scratch_server}/#{repo}-#{version}-changes_report.html")
  puts("#{plasma_versions.browser} #{plasma_versions.scratch_server_url}/#{repo}-#{version}-changes_report.html")
  system("#{plasma_versions.browser} #{plasma_versions.scratch_server_url}/#{repo}-#{version}-changes_report.html")
end

gitCommit = File.read("#{plasma_versions.version}/release_data").split(';')[2]
branch = File.read("#{plasma_versions.version}/release_data").split(';')[1]

system("#{plasma_versions.browser} https://invent.kde.org/plasma/kwin/-/commits/#{branch}")

if TTY::Prompt.new.no?("Tar made with https://invent.kde.org/plasma/#{repo}/-/commit/#{gitCommit}" \
  ' Publish this tar?')
  abort
end

puts("== uploading")
system("rsync -CvzaP --stats #{plasma_versions.version}/*xz #{plasma_versions.version}/*xz.sig #{server}#{plasma_versions.ftpstable}/plasma/#{plasma_versions.version}/")

puts("== editing kde.org")
sha256sum = File.read("#{plasma_versions.version}/release_data").split(';')[4].chomp!
Dir.chdir(plasma_versions.wwwcheckout) do
  updated_source_plasma = []
  found_line_no = -99
  system("git checkout master")
  system("git pull")
  File.foreach("content/info/sources/source-plasma-#{plasma_versions.version}.html").with_index do |line, line_no|
    #puts "#{line_no}: #{line}"
    found_line = line.match?("#{repo}-#{plasma_versions.version}")
    if found_line
      puts "found_line! #{found_line}"
      found_line_no = line_no
      line.gsub!("#{repo}-#{plasma_versions.version}", "#{repo}-#{version}")
    end
    if line_no == found_line_no + 2
      puts "line_no #{line_no} found_line_no #{found_line_no} found_line_no + 2 #{found_line_no + 2}"
      line.gsub!(/>([0-9a-fA-F]+)</, ">#{sha256sum}<")
    end
    updated_source_plasma << line
  end
  File.open("content/info/sources/source-plasma-#{plasma_versions.version}.html", "w+") do |f|
    f.puts(updated_source_plasma)
  end
  system("git diff")
  if scratch
    system("git reset --hard")
  else
    system("git commit -a -m 'Post-release update to #{repo} #{plasma_versions.version}'")
    system("git push")
  end
end

puts("== pushing tag kde.org")
Dir.chdir(plasma_versions.version) do
  if scratch
    puts("../../tagme.rb --version #{version}")
  else
    system("../../tagme.rb --version #{version}")
  end
end

puts("== opening e-mail text")
File.open("tmp-announcements/release-team-update-#{repo}", "w+") do |f|
  f.puts("e-mail me to kde-announce@kde.org, release-team@kde.org, plasma-devel@kde.org")
  f.puts()
  f.puts("Subject: Plasma ${repo} ${version} update")
  f.puts()
  f.puts("There has been an update to Plasma #{plasma_versions.version}")
  f.puts()
  f.puts("#{repo} now has #{repo}-#{version} tar available to download for packaging")
  sha256sum = File.read("#{plasma_versions.version}/release_data").split(';')[4].chomp!
  gitCommit = File.read("#{plasma_versions.version}/release_data").split(';')[2]
  f.puts("sha256sum: #{sha256sum} Git commit: #{gitCommit}")
  f.puts()
  f.puts("https://kde.org/info/plasma-#{plasma_versions.version}/")
end
system("kate tmp-announcements/release-team-update-#{repo}")
