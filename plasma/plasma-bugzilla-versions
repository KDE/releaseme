#!/bin/bash
# SPDX-License-Identifier: GPL-2.0-or-later
# SPDX-FileCopyrightText: 2015 Jonathan Riddell <jr@jriddell.org>

# Bulk set old product versions in bugzilla to inactive
# There seems to be no API to do this
# so here we use curl to get the page with the magic token then update the version

# look in your web browser settings for these cookies and put in bugzilla-cookies.inc
# Bugzilla_logincookie=QskELeoUxx
# Bugzilla_login=12345

set -ex

. bugzilla-cookies.inc

. VERSIONS.inc

. bugzilla-products.inc

versions="\
git-stable-Plasma/5.24
"

for PRODUCT in $products; do 


  for VERS in $versions; do

   # Set existing version to inactive
   echo "setting to inactive version: $VERS"
   # Set the old version to inactive
   tokenline=`curl -s --cookie "Bugzilla_logincookie=${Bugzilla_logincookie};Bugzilla_login=${Bugzilla_login}" "https://bugs.kde.org/editversions.cgi?action=edit&product=${PRODUCT}&version=${VERS}" | grep 'name="token"'` #|| true
   echo "got token $tokenline"
   if [ -z "$tokenline" ]; then
       echo 'No id="token" line in the bugzilla HTML output'
       continue
   fi
   TOKEN=`echo $tokenline | sed "s,.*value=\",," | sed "s,\".,,"`
   echo token for inactive setting is: $TOKEN

   curl --cookie "Bugzilla_logincookie=${Bugzilla_logincookie};Bugzilla_login=${Bugzilla_login}" --data "version=${VERS}&versionold=${VERS}&action=update&product=${PRODUCT}&token=${TOKEN}" https://bugs.kde.org/editversions.cgi -o curlpushout2.html
   if grep -q 'needs a legitimate login and password to continue' curlpushout2.html; then
     echo "Login failure"
     exit 1
   fi
   echo "=== DONE"


#   # Set existing inactive version to active
#   echo "setting to inactive version: $VERS"
#   # Set the old version to inactive
#   tokenline=`curl -s --cookie "Bugzilla_logincookie=${Bugzilla_logincookie};Bugzilla_login=${Bugzilla_login}" "https://bugs.kde.org/editversions.cgi?action=edit&product=${PRODUCT}&version=${VERS}" | grep 'name="token"'` || true
#   echo "got token $tokenline"
#   if [ -z "$tokenline" ]; then
#       echo 'No id="token" line in the bugzilla HTML output'
#       continue
#   fi
#   TOKEN=`echo $tokenline | sed "s,.*value=\",," | sed "s,\".,,"`
#   echo token for inactive setting is: $TOKEN

#   curl --cookie "Bugzilla_logincookie=${Bugzilla_logincookie};Bugzilla_login=${Bugzilla_login}" --data "version=${VERS}&versionold=${VERS}&isactive=1&action=update&product=${PRODUCT}&token=${TOKEN}" https://bugs.kde.org/editversions.cgi -o curlpushout2.html
#   if grep -q 'needs a legitimate login and password to continue' curlpushout2.html; then
#     echo "Login failure"
#     exit 1
#   fi
#   echo "=== DONE"


    # Add a new version
#   echo "adding a new version: $VERS"
#   tokenline=`curl -s --cookie "Bugzilla_logincookie=${Bugzilla_logincookie};Bugzilla_login=${Bugzilla_login}" "https://bugs.kde.org/editversions.cgi?action=add&product=drkonqi" | grep 'name="token"'`
#   if [ -z "$tokenline" ]; then
#       echo 'No id="token" line in the bugzilla HTML output'
#       exit 1
#   fi
#   TOKEN=`echo $tokenline | sed "s,.*value=\",," | sed "s,\".,,"`
#   echo token is: $TOKEN

#   curl --cookie "Bugzilla_logincookie=${Bugzilla_logincookie};Bugzilla_login=${Bugzilla_login}" --data "version=${VERS}&action=new&product=${PRODUCT}&token=${TOKEN}" https://bugs.kde.org/editversions.cgi -o curlpushout.html
#   if grep -q 'needs a legitimate login and password to continue' curlpushout.html; then
#     echo "Login failure"
#     exit 1
#   fi

  done

done

echo "opening plasma-nm as example to verify"
$BROWSER "https://bugs.kde.org/editversions.cgi?product=plasma-nm"
