#!/usr/bin/env ruby
#!/bin/bash
# SPDX-License-Identifier: GPL-2.0-only OR GPL-3.0-only OR LicenseRef-KDE-Accepted-GPL
# SPDX-FileCopyrightText: 2023 Jonathan Riddell <jr@jriddell.org>

# Run before making tars
# ./update-versions
# and just after a release update versions for next release run
# ./update-versions --next

# It'll update the version and the dep version for the next release

require 'net/http'
require 'json'
require 'optparse'
require 'fileutils'
require_relative 'lib/plasma_version'
require_relative 'lib/kde_identify'
require_relative 'retry'

class UploadTars
  def initialize
    @plasma_versions = PlasmaVersion.new
    @upload_server = @plasma_versions.uploadserver
    @product = @plasma_versions.product
    @ftpstable = @plasma_versions.ftpstable
    @old_ftpstable = @plasma_versions.old_ftpstable
    @version = @plasma_versions.version
    @old_version = @plasma_versions.old_version
    @scratch_server = @plasma_versions.scratch_server
    @scratch_server_url = @plasma_versions.scratch_server_url
    @browser = @plasma_versions.browser
    @infocheckout = @plasma_versions.infocheckout
  end

  def makeDirectory
    puts "== Making directory"
    system("ssh #{@upload_server} mkdir -p #{@ftpstable}/#{@product}/#{@version}")
    system("ssh #{@upload_server} chmod 750 #{@ftpstable}/#{@product}/#{@version}")
    system("ssh #{@upload_server} chown .packager #{@ftpstable}/#{@product}/#{@version}")
  end

  def upload
    puts "== Uploading Tars"
    system("rsync -CvzaP --stats #{@product}-#{@version}/*xz #{@product}-#{@version}/*xz.sig #{@upload_server}:#{@ftpstable}/#{@product}/#{@version}/")
    puts "== Uploading release-data file to #{@scratch_server}/#{@version}-release-data"
    system("scp #{@product}-#{@version}/#{@version}-release-data #{@scratch_server}")
    system("#{@browser} #{@scratch_server_url}/#{@version}-release-data")
  end

  def tests
    begin
      Dir.mkdir("tmp-tests")
    rescue
      puts "Already exists tmp-tests/"
    end
    puts "== Start diff tarballs test, check for diff below"
    system("ssh #{@upload_server} ls #{@ftpstable}/#{@product}/#{@version}/ | sed s,-5.*xz,, > tmp-tests/#{@product}-#{@version}-tars")
    puts("ssh #{@upload_server} ls #{@old_ftpstable}/#{@product}/#{@old_version}/ | sed s,-5.*xz,, > tmp-tests/#{@product}-#{@old_version}-tars")
    system("ssh #{@upload_server} ls #{@old_ftpstable}/#{@product}/#{@old_version}/ | sed s,-5.*xz,, > tmp-tests/#{@product}-#{@old_version}-tars")
    system("diff -u tmp-tests/#{@product}-#{@old_version}-tars tmp-tests/#{@product}-#{@version}-tars | tee tmp-tests/#{@product}-#{@version}-tars-testoutput")
    puts "== End diff tarballs test"

    puts "== Start tarballs l10n probe test, check for diff below"
    system("ssh #{@upload_server} \"for asdf in #{@ftpstable}/#{@product}/#{@version}/*xz; do tar --list -f \\\${asdf} | awk '{print \$6}' | grep /po/ | sed s,.*-#{@version}/,, | grep .po\$ | sort; done \" > tmp-tests/#{@product}-#{@version}-po")
    system("ssh #{@upload_server} \"for asdf in #{@old_ftpstable}/#{@product}/#{@old_version}/*xz; do tar --list -f \\\${asdf} | awk '{print \$6}' | grep /po/ | sed s,.*-#{@old_version}/,, | grep .po$ | sort; done \" > tmp-tests/#{@product}-#{@old_version}-po")
    system("diff -u tmp-tests/#{@product}-#{@old_version}-po tmp-tests/#{@product}-#{@version}-po | tee tmp-tests/#{@product}-#{@version}-po-testoutput")
    puts "== End tarballs l10n probe test"

    puts "== Start tarballs docs probe test, check for diff below"
    system("ssh #{@upload_server} \"for asdf in #{@ftpstable}/#{@product}/#{@version}/*xz; do tar --list -f \\\${asdf} | awk '{print \$6}' | grep /doc/ | sed s,.*-#{@version}/,, | grep -v /$ | sort; done \" > tmp-tests/#{@product}-#{@version}-doc")
    system("ssh #{@upload_server} \"for asdf in #{@old_ftpstable}/#{@product}/#{@old_version}/*xz; do tar --list -f \\\${asdf} | awk '{print \$6}' | grep /doc/ | sed s,.*-#{@old_version}/,, | grep -v /$ | sort; done \" > tmp-tests/#{@product}-#{@old_version}-doc")
    system("diff -u tmp-tests/#{@product}-#{@old_version}-doc tmp-tests/#{@product}-#{@version}-doc | tee tmp-tests/#{@product}-#{@version}-doc-testoutput")
    puts "== End tarballs l10n probe test"
  end

  def webpages
    product_webpage = "plasma"
    product_webpage = "kf" if @product == "frameworks"
    puts "== start updating info page source-#{@product}-#{@version}.html"
    FileUtils.cp("#{@product}-#{@version}/source-#{@product}-#{@version}.inc", "#{@infocheckout}/sources/source-#{product_webpage}-#{@version}.html")
    Dir.chdir("#{@infocheckout}") do
      system("git add sources/source-#{@product}-#{@version}.html || true")
      system("git diff sources/source-#{@product}-#{@version}.html")
      system("git commit -m \"update source-#{@product}-#{@version}.html\"")
      system("git push")
    end
    puts "== end updating info page source-#{@product}-#{@version}.html"
    puts "â†’ Read and check the test output in tmp-tests/#{@product}-#{@version}-doc-testoutput tmp-tests/#{@product}-#{@version}-po-testoutput tmp-tests/#{@product}-#{@version}-tars-testoutput"
  end

end

uploadTars = UploadTars.new
uploadTars.makeDirectory
uploadTars.upload
uploadTars.tests
uploadTars.webpages
